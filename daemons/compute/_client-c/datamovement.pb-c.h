/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: datamovement.proto */

#ifndef PROTOBUF_C_datamovement_2eproto__INCLUDED
#define PROTOBUF_C_datamovement_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"

typedef struct Datamovement__DataMovementVersionResponse Datamovement__DataMovementVersionResponse;
typedef struct Datamovement__DataMovementWorkflow Datamovement__DataMovementWorkflow;
typedef struct Datamovement__DataMovementCommandStatus Datamovement__DataMovementCommandStatus;
typedef struct Datamovement__DataMovementCreateRequest Datamovement__DataMovementCreateRequest;
typedef struct Datamovement__DataMovementCreateResponse Datamovement__DataMovementCreateResponse;
typedef struct Datamovement__DataMovementStatusRequest Datamovement__DataMovementStatusRequest;
typedef struct Datamovement__DataMovementStatusResponse Datamovement__DataMovementStatusResponse;
typedef struct Datamovement__DataMovementDeleteRequest Datamovement__DataMovementDeleteRequest;
typedef struct Datamovement__DataMovementDeleteResponse Datamovement__DataMovementDeleteResponse;
typedef struct Datamovement__DataMovementListRequest Datamovement__DataMovementListRequest;
typedef struct Datamovement__DataMovementListResponse Datamovement__DataMovementListResponse;
typedef struct Datamovement__DataMovementCancelRequest Datamovement__DataMovementCancelRequest;
typedef struct Datamovement__DataMovementCancelResponse Datamovement__DataMovementCancelResponse;


/* --- enums --- */

typedef enum _Datamovement__DataMovementCreateResponse__Status {
  DATAMOVEMENT__DATA_MOVEMENT_CREATE_RESPONSE__STATUS__SUCCESS = 0,
  DATAMOVEMENT__DATA_MOVEMENT_CREATE_RESPONSE__STATUS__FAILED = 1,
  DATAMOVEMENT__DATA_MOVEMENT_CREATE_RESPONSE__STATUS__INVALID = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMOVEMENT__DATA_MOVEMENT_CREATE_RESPONSE__STATUS)
} Datamovement__DataMovementCreateResponse__Status;
typedef enum _Datamovement__DataMovementStatusResponse__State {
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__PENDING = 0,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__STARTING = 1,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__RUNNING = 2,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__COMPLETED = 3,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__CANCELLING = 4,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__UNKNOWN_STATE = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE)
} Datamovement__DataMovementStatusResponse__State;
typedef enum _Datamovement__DataMovementStatusResponse__Status {
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__INVALID = 0,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__NOT_FOUND = 1,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__SUCCESS = 2,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__FAILED = 3,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__CANCELLED = 4,
  DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__UNKNOWN_STATUS = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS)
} Datamovement__DataMovementStatusResponse__Status;
typedef enum _Datamovement__DataMovementDeleteResponse__Status {
  DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS__INVALID = 0,
  DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS__NOT_FOUND = 1,
  DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS__SUCCESS = 2,
  DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS__ACTIVE = 3,
  DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS__UNKNOWN = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS)
} Datamovement__DataMovementDeleteResponse__Status;
typedef enum _Datamovement__DataMovementCancelResponse__Status {
  DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__STATUS__INVALID = 0,
  DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__STATUS__NOT_FOUND = 1,
  DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__STATUS__SUCCESS = 2,
  DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__STATUS__FAILED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__STATUS)
} Datamovement__DataMovementCancelResponse__Status;

/* --- messages --- */

/*
 * The data movement version response returns information on the running data movement daemon. This includes
 * the build version and a list of supported API versions.
 */
struct  Datamovement__DataMovementVersionResponse
{
  ProtobufCMessage base;
  char *version;
  size_t n_apiversions;
  int32_t *apiversions;
};
#define DATAMOVEMENT__DATA_MOVEMENT_VERSION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_version_response__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


/*
 * Data Movement workflow message contains identifying information for the workflow initiating the data movement
 * operation. This message must be nested in all Request messages.
 */
struct  Datamovement__DataMovementWorkflow
{
  ProtobufCMessage base;
  char *name;
  char *namespace_;
};
#define DATAMOVEMENT__DATA_MOVEMENT_WORKFLOW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_workflow__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * Data Movement workflows contain a CommandStatus object in the Status object. This information
 * relays the current state of the data movement progress. It includes the command, the progress
 * percentage (e.g. 0-100%), elapsed time of the data movement (duration string, e.g. 5s), the last
 * received message from the data movment command, and the time of that last message.
 */
struct  Datamovement__DataMovementCommandStatus
{
  ProtobufCMessage base;
  char *command;
  int32_t progress;
  char *elapsedtime;
  char *lastmessage;
  char *lastmessagetime;
};
#define DATAMOVEMENT__DATA_MOVEMENT_COMMAND_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_command_status__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * The data movement create request message containing the source and destination files or directories. The
 * NNF Data Mover will perform a copy from source to the destination. Specify dryrun to instantiate
 * a new data movement request where the copy is simulated and not executed
 */
struct  Datamovement__DataMovementCreateRequest
{
  ProtobufCMessage base;
  Datamovement__DataMovementWorkflow *workflow;
  char *source;
  char *destination;
  protobuf_c_boolean dryrun;
};
#define DATAMOVEMENT__DATA_MOVEMENT_CREATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_create_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * The data movement create response message contains a unique identifier amont all data movement requests for
 * the lifetime of the active job. The UID can be used to query for status of the request using the
 * data movement status request message.
 */
struct  Datamovement__DataMovementCreateResponse
{
  ProtobufCMessage base;
  char *uid;
  Datamovement__DataMovementCreateResponse__Status status;
  char *message;
};
#define DATAMOVEMENT__DATA_MOVEMENT_CREATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_create_response__descriptor) \
    , (char *)protobuf_c_empty_string, DATAMOVEMENT__DATA_MOVEMENT_CREATE_RESPONSE__STATUS__SUCCESS, (char *)protobuf_c_empty_string }


/*
 * The data movement status request message permits users to query the status of a previously issued
 * data movement request by specifying the request's unique identifier.
 */
struct  Datamovement__DataMovementStatusRequest
{
  ProtobufCMessage base;
  Datamovement__DataMovementWorkflow *workflow;
  char *uid;
  int64_t maxwaittime;
};
#define DATAMOVEMENT__DATA_MOVEMENT_STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_status_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, 0 }


/*
 * The data movement status response message defines the current status of a data movement request. The
 * state field describes the current state of the request. The message field contains ancillary information
 * describing the data movement request. 
 */
struct  Datamovement__DataMovementStatusResponse
{
  ProtobufCMessage base;
  Datamovement__DataMovementStatusResponse__State state;
  Datamovement__DataMovementStatusResponse__Status status;
  char *message;
  Datamovement__DataMovementCommandStatus *commandstatus;
};
#define DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_status_response__descriptor) \
    , DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATE__PENDING, DATAMOVEMENT__DATA_MOVEMENT_STATUS_RESPONSE__STATUS__INVALID, (char *)protobuf_c_empty_string, NULL }


/*
 * The data movement delete request permits users to delete a completed data movement request (any request with a 
 * status of COMPLETED) by specifying the request's unique identifier.
 */
struct  Datamovement__DataMovementDeleteRequest
{
  ProtobufCMessage base;
  Datamovement__DataMovementWorkflow *workflow;
  char *uid;
};
#define DATAMOVEMENT__DATA_MOVEMENT_DELETE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_delete_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * The data movement delete response returns the status of the delete operation.
 */
struct  Datamovement__DataMovementDeleteResponse
{
  ProtobufCMessage base;
  Datamovement__DataMovementDeleteResponse__Status status;
  char *message;
};
#define DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_delete_response__descriptor) \
    , DATAMOVEMENT__DATA_MOVEMENT_DELETE_RESPONSE__STATUS__INVALID, (char *)protobuf_c_empty_string }


/*
 * The data movement list request allows a user to get a list of the current
 * data movement requests. The user must supply the workflow and namespace
 * which will be used to filter the data movement requests for retrieval.
 */
struct  Datamovement__DataMovementListRequest
{
  ProtobufCMessage base;
  Datamovement__DataMovementWorkflow *workflow;
};
#define DATAMOVEMENT__DATA_MOVEMENT_LIST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_list_request__descriptor) \
    , NULL }


/*
 * The data movement list response returns a list of the matching data movement
 * requests' uids
 */
struct  Datamovement__DataMovementListResponse
{
  ProtobufCMessage base;
  size_t n_uids;
  char **uids;
};
#define DATAMOVEMENT__DATA_MOVEMENT_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_list_response__descriptor) \
    , 0,NULL }


/*
 * The data movement cancel request permits users to iniatiate a cancellation of
 * a data movement request that is in progress.
 */
struct  Datamovement__DataMovementCancelRequest
{
  ProtobufCMessage base;
  Datamovement__DataMovementWorkflow *workflow;
  char *uid;
};
#define DATAMOVEMENT__DATA_MOVEMENT_CANCEL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_cancel_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * The data movement cancel response returns the status of the cancel request.
 * The cancel process will begin upon success. This response does not indicate
 * that that cancel process has completed, but rather that it has been
 * initiated.
 */
struct  Datamovement__DataMovementCancelResponse
{
  ProtobufCMessage base;
  Datamovement__DataMovementCancelResponse__Status status;
  char *message;
};
#define DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&datamovement__data_movement_cancel_response__descriptor) \
    , DATAMOVEMENT__DATA_MOVEMENT_CANCEL_RESPONSE__STATUS__INVALID, (char *)protobuf_c_empty_string }


/* Datamovement__DataMovementVersionResponse methods */
void   datamovement__data_movement_version_response__init
                     (Datamovement__DataMovementVersionResponse         *message);
size_t datamovement__data_movement_version_response__get_packed_size
                     (const Datamovement__DataMovementVersionResponse   *message);
size_t datamovement__data_movement_version_response__pack
                     (const Datamovement__DataMovementVersionResponse   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_version_response__pack_to_buffer
                     (const Datamovement__DataMovementVersionResponse   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementVersionResponse *
       datamovement__data_movement_version_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_version_response__free_unpacked
                     (Datamovement__DataMovementVersionResponse *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementWorkflow methods */
void   datamovement__data_movement_workflow__init
                     (Datamovement__DataMovementWorkflow         *message);
size_t datamovement__data_movement_workflow__get_packed_size
                     (const Datamovement__DataMovementWorkflow   *message);
size_t datamovement__data_movement_workflow__pack
                     (const Datamovement__DataMovementWorkflow   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_workflow__pack_to_buffer
                     (const Datamovement__DataMovementWorkflow   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementWorkflow *
       datamovement__data_movement_workflow__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_workflow__free_unpacked
                     (Datamovement__DataMovementWorkflow *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementCommandStatus methods */
void   datamovement__data_movement_command_status__init
                     (Datamovement__DataMovementCommandStatus         *message);
size_t datamovement__data_movement_command_status__get_packed_size
                     (const Datamovement__DataMovementCommandStatus   *message);
size_t datamovement__data_movement_command_status__pack
                     (const Datamovement__DataMovementCommandStatus   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_command_status__pack_to_buffer
                     (const Datamovement__DataMovementCommandStatus   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementCommandStatus *
       datamovement__data_movement_command_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_command_status__free_unpacked
                     (Datamovement__DataMovementCommandStatus *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementCreateRequest methods */
void   datamovement__data_movement_create_request__init
                     (Datamovement__DataMovementCreateRequest         *message);
size_t datamovement__data_movement_create_request__get_packed_size
                     (const Datamovement__DataMovementCreateRequest   *message);
size_t datamovement__data_movement_create_request__pack
                     (const Datamovement__DataMovementCreateRequest   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_create_request__pack_to_buffer
                     (const Datamovement__DataMovementCreateRequest   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementCreateRequest *
       datamovement__data_movement_create_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_create_request__free_unpacked
                     (Datamovement__DataMovementCreateRequest *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementCreateResponse methods */
void   datamovement__data_movement_create_response__init
                     (Datamovement__DataMovementCreateResponse         *message);
size_t datamovement__data_movement_create_response__get_packed_size
                     (const Datamovement__DataMovementCreateResponse   *message);
size_t datamovement__data_movement_create_response__pack
                     (const Datamovement__DataMovementCreateResponse   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_create_response__pack_to_buffer
                     (const Datamovement__DataMovementCreateResponse   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementCreateResponse *
       datamovement__data_movement_create_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_create_response__free_unpacked
                     (Datamovement__DataMovementCreateResponse *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementStatusRequest methods */
void   datamovement__data_movement_status_request__init
                     (Datamovement__DataMovementStatusRequest         *message);
size_t datamovement__data_movement_status_request__get_packed_size
                     (const Datamovement__DataMovementStatusRequest   *message);
size_t datamovement__data_movement_status_request__pack
                     (const Datamovement__DataMovementStatusRequest   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_status_request__pack_to_buffer
                     (const Datamovement__DataMovementStatusRequest   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementStatusRequest *
       datamovement__data_movement_status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_status_request__free_unpacked
                     (Datamovement__DataMovementStatusRequest *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementStatusResponse methods */
void   datamovement__data_movement_status_response__init
                     (Datamovement__DataMovementStatusResponse         *message);
size_t datamovement__data_movement_status_response__get_packed_size
                     (const Datamovement__DataMovementStatusResponse   *message);
size_t datamovement__data_movement_status_response__pack
                     (const Datamovement__DataMovementStatusResponse   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_status_response__pack_to_buffer
                     (const Datamovement__DataMovementStatusResponse   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementStatusResponse *
       datamovement__data_movement_status_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_status_response__free_unpacked
                     (Datamovement__DataMovementStatusResponse *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementDeleteRequest methods */
void   datamovement__data_movement_delete_request__init
                     (Datamovement__DataMovementDeleteRequest         *message);
size_t datamovement__data_movement_delete_request__get_packed_size
                     (const Datamovement__DataMovementDeleteRequest   *message);
size_t datamovement__data_movement_delete_request__pack
                     (const Datamovement__DataMovementDeleteRequest   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_delete_request__pack_to_buffer
                     (const Datamovement__DataMovementDeleteRequest   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementDeleteRequest *
       datamovement__data_movement_delete_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_delete_request__free_unpacked
                     (Datamovement__DataMovementDeleteRequest *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementDeleteResponse methods */
void   datamovement__data_movement_delete_response__init
                     (Datamovement__DataMovementDeleteResponse         *message);
size_t datamovement__data_movement_delete_response__get_packed_size
                     (const Datamovement__DataMovementDeleteResponse   *message);
size_t datamovement__data_movement_delete_response__pack
                     (const Datamovement__DataMovementDeleteResponse   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_delete_response__pack_to_buffer
                     (const Datamovement__DataMovementDeleteResponse   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementDeleteResponse *
       datamovement__data_movement_delete_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_delete_response__free_unpacked
                     (Datamovement__DataMovementDeleteResponse *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementListRequest methods */
void   datamovement__data_movement_list_request__init
                     (Datamovement__DataMovementListRequest         *message);
size_t datamovement__data_movement_list_request__get_packed_size
                     (const Datamovement__DataMovementListRequest   *message);
size_t datamovement__data_movement_list_request__pack
                     (const Datamovement__DataMovementListRequest   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_list_request__pack_to_buffer
                     (const Datamovement__DataMovementListRequest   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementListRequest *
       datamovement__data_movement_list_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_list_request__free_unpacked
                     (Datamovement__DataMovementListRequest *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementListResponse methods */
void   datamovement__data_movement_list_response__init
                     (Datamovement__DataMovementListResponse         *message);
size_t datamovement__data_movement_list_response__get_packed_size
                     (const Datamovement__DataMovementListResponse   *message);
size_t datamovement__data_movement_list_response__pack
                     (const Datamovement__DataMovementListResponse   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_list_response__pack_to_buffer
                     (const Datamovement__DataMovementListResponse   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementListResponse *
       datamovement__data_movement_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_list_response__free_unpacked
                     (Datamovement__DataMovementListResponse *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementCancelRequest methods */
void   datamovement__data_movement_cancel_request__init
                     (Datamovement__DataMovementCancelRequest         *message);
size_t datamovement__data_movement_cancel_request__get_packed_size
                     (const Datamovement__DataMovementCancelRequest   *message);
size_t datamovement__data_movement_cancel_request__pack
                     (const Datamovement__DataMovementCancelRequest   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_cancel_request__pack_to_buffer
                     (const Datamovement__DataMovementCancelRequest   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementCancelRequest *
       datamovement__data_movement_cancel_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_cancel_request__free_unpacked
                     (Datamovement__DataMovementCancelRequest *message,
                      ProtobufCAllocator *allocator);
/* Datamovement__DataMovementCancelResponse methods */
void   datamovement__data_movement_cancel_response__init
                     (Datamovement__DataMovementCancelResponse         *message);
size_t datamovement__data_movement_cancel_response__get_packed_size
                     (const Datamovement__DataMovementCancelResponse   *message);
size_t datamovement__data_movement_cancel_response__pack
                     (const Datamovement__DataMovementCancelResponse   *message,
                      uint8_t             *out);
size_t datamovement__data_movement_cancel_response__pack_to_buffer
                     (const Datamovement__DataMovementCancelResponse   *message,
                      ProtobufCBuffer     *buffer);
Datamovement__DataMovementCancelResponse *
       datamovement__data_movement_cancel_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   datamovement__data_movement_cancel_response__free_unpacked
                     (Datamovement__DataMovementCancelResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Datamovement__DataMovementVersionResponse_Closure)
                 (const Datamovement__DataMovementVersionResponse *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementWorkflow_Closure)
                 (const Datamovement__DataMovementWorkflow *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementCommandStatus_Closure)
                 (const Datamovement__DataMovementCommandStatus *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementCreateRequest_Closure)
                 (const Datamovement__DataMovementCreateRequest *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementCreateResponse_Closure)
                 (const Datamovement__DataMovementCreateResponse *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementStatusRequest_Closure)
                 (const Datamovement__DataMovementStatusRequest *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementStatusResponse_Closure)
                 (const Datamovement__DataMovementStatusResponse *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementDeleteRequest_Closure)
                 (const Datamovement__DataMovementDeleteRequest *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementDeleteResponse_Closure)
                 (const Datamovement__DataMovementDeleteResponse *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementListRequest_Closure)
                 (const Datamovement__DataMovementListRequest *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementListResponse_Closure)
                 (const Datamovement__DataMovementListResponse *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementCancelRequest_Closure)
                 (const Datamovement__DataMovementCancelRequest *message,
                  void *closure_data);
typedef void (*Datamovement__DataMovementCancelResponse_Closure)
                 (const Datamovement__DataMovementCancelResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Datamovement__DataMover_Service Datamovement__DataMover_Service;
struct Datamovement__DataMover_Service
{
  ProtobufCService base;
  void (*version)(Datamovement__DataMover_Service *service,
                  const Google__Protobuf__Empty *input,
                  Datamovement__DataMovementVersionResponse_Closure closure,
                  void *closure_data);
  void (*create)(Datamovement__DataMover_Service *service,
                 const Datamovement__DataMovementCreateRequest *input,
                 Datamovement__DataMovementCreateResponse_Closure closure,
                 void *closure_data);
  void (*status)(Datamovement__DataMover_Service *service,
                 const Datamovement__DataMovementStatusRequest *input,
                 Datamovement__DataMovementStatusResponse_Closure closure,
                 void *closure_data);
  void (*delete)(Datamovement__DataMover_Service *service,
                 const Datamovement__DataMovementDeleteRequest *input,
                 Datamovement__DataMovementDeleteResponse_Closure closure,
                 void *closure_data);
  void (*list)(Datamovement__DataMover_Service *service,
               const Datamovement__DataMovementListRequest *input,
               Datamovement__DataMovementListResponse_Closure closure,
               void *closure_data);
  void (*cancel)(Datamovement__DataMover_Service *service,
                 const Datamovement__DataMovementCancelRequest *input,
                 Datamovement__DataMovementCancelResponse_Closure closure,
                 void *closure_data);
};
typedef void (*Datamovement__DataMover_ServiceDestroy)(Datamovement__DataMover_Service *);
void datamovement__data_mover__init (Datamovement__DataMover_Service *service,
                                     Datamovement__DataMover_ServiceDestroy destroy);
#define DATAMOVEMENT__DATA_MOVER__BASE_INIT \
    { &datamovement__data_mover__descriptor, protobuf_c_service_invoke_internal, NULL }
#define DATAMOVEMENT__DATA_MOVER__INIT(function_prefix__) \
    { DATAMOVEMENT__DATA_MOVER__BASE_INIT,\
      function_prefix__ ## version,\
      function_prefix__ ## create,\
      function_prefix__ ## status,\
      function_prefix__ ## delete,\
      function_prefix__ ## list,\
      function_prefix__ ## cancel  }
void datamovement__data_mover__version(ProtobufCService *service,
                                       const Google__Protobuf__Empty *input,
                                       Datamovement__DataMovementVersionResponse_Closure closure,
                                       void *closure_data);
void datamovement__data_mover__create(ProtobufCService *service,
                                      const Datamovement__DataMovementCreateRequest *input,
                                      Datamovement__DataMovementCreateResponse_Closure closure,
                                      void *closure_data);
void datamovement__data_mover__status(ProtobufCService *service,
                                      const Datamovement__DataMovementStatusRequest *input,
                                      Datamovement__DataMovementStatusResponse_Closure closure,
                                      void *closure_data);
void datamovement__data_mover__delete(ProtobufCService *service,
                                      const Datamovement__DataMovementDeleteRequest *input,
                                      Datamovement__DataMovementDeleteResponse_Closure closure,
                                      void *closure_data);
void datamovement__data_mover__list(ProtobufCService *service,
                                    const Datamovement__DataMovementListRequest *input,
                                    Datamovement__DataMovementListResponse_Closure closure,
                                    void *closure_data);
void datamovement__data_mover__cancel(ProtobufCService *service,
                                      const Datamovement__DataMovementCancelRequest *input,
                                      Datamovement__DataMovementCancelResponse_Closure closure,
                                      void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor datamovement__data_movement_version_response__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_workflow__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_command_status__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_create_request__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_create_response__descriptor;
extern const ProtobufCEnumDescriptor    datamovement__data_movement_create_response__status__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_status_request__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_status_response__descriptor;
extern const ProtobufCEnumDescriptor    datamovement__data_movement_status_response__state__descriptor;
extern const ProtobufCEnumDescriptor    datamovement__data_movement_status_response__status__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_delete_request__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_delete_response__descriptor;
extern const ProtobufCEnumDescriptor    datamovement__data_movement_delete_response__status__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_list_request__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_list_response__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_cancel_request__descriptor;
extern const ProtobufCMessageDescriptor datamovement__data_movement_cancel_response__descriptor;
extern const ProtobufCEnumDescriptor    datamovement__data_movement_cancel_response__status__descriptor;
extern const ProtobufCServiceDescriptor datamovement__data_mover__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_datamovement_2eproto__INCLUDED */
