// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datamovement.proto

#include "datamovement.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace datamovement {
constexpr DataMovementCreateRequest::DataMovementCreateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : workflow_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , namespace__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , source_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , destination_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dryrun_(false){}
struct DataMovementCreateRequestDefaultTypeInternal {
  constexpr DataMovementCreateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementCreateRequestDefaultTypeInternal() {}
  union {
    DataMovementCreateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementCreateRequestDefaultTypeInternal _DataMovementCreateRequest_default_instance_;
constexpr DataMovementCreateResponse::DataMovementCreateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0)
{}
struct DataMovementCreateResponseDefaultTypeInternal {
  constexpr DataMovementCreateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementCreateResponseDefaultTypeInternal() {}
  union {
    DataMovementCreateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementCreateResponseDefaultTypeInternal _DataMovementCreateResponse_default_instance_;
constexpr DataMovementStatusRequest::DataMovementStatusRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , maxwaittime_(int64_t{0}){}
struct DataMovementStatusRequestDefaultTypeInternal {
  constexpr DataMovementStatusRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementStatusRequestDefaultTypeInternal() {}
  union {
    DataMovementStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementStatusRequestDefaultTypeInternal _DataMovementStatusRequest_default_instance_;
constexpr DataMovementStatusResponse::DataMovementStatusResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(0)

  , status_(0)
{}
struct DataMovementStatusResponseDefaultTypeInternal {
  constexpr DataMovementStatusResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementStatusResponseDefaultTypeInternal() {}
  union {
    DataMovementStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementStatusResponseDefaultTypeInternal _DataMovementStatusResponse_default_instance_;
constexpr DataMovementDeleteRequest::DataMovementDeleteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DataMovementDeleteRequestDefaultTypeInternal {
  constexpr DataMovementDeleteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementDeleteRequestDefaultTypeInternal() {}
  union {
    DataMovementDeleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementDeleteRequestDefaultTypeInternal _DataMovementDeleteRequest_default_instance_;
constexpr DataMovementDeleteResponse::DataMovementDeleteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(0)
{}
struct DataMovementDeleteResponseDefaultTypeInternal {
  constexpr DataMovementDeleteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementDeleteResponseDefaultTypeInternal() {}
  union {
    DataMovementDeleteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementDeleteResponseDefaultTypeInternal _DataMovementDeleteResponse_default_instance_;
constexpr DataMovementListRequest::DataMovementListRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : workflow_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , namespace__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DataMovementListRequestDefaultTypeInternal {
  constexpr DataMovementListRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementListRequestDefaultTypeInternal() {}
  union {
    DataMovementListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementListRequestDefaultTypeInternal _DataMovementListRequest_default_instance_;
constexpr DataMovementListResponse::DataMovementListResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uids_(){}
struct DataMovementListResponseDefaultTypeInternal {
  constexpr DataMovementListResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DataMovementListResponseDefaultTypeInternal() {}
  union {
    DataMovementListResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DataMovementListResponseDefaultTypeInternal _DataMovementListResponse_default_instance_;
}  // namespace datamovement
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_datamovement_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_datamovement_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_datamovement_2eproto = nullptr;

const uint32_t TableStruct_datamovement_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateRequest, workflow_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateRequest, namespace__),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateRequest, source_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateRequest, destination_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateRequest, dryrun_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateResponse, uid_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateResponse, status_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementCreateResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusRequest, uid_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusRequest, maxwaittime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusResponse, state_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusResponse, status_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementStatusResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementDeleteRequest, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementDeleteResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementListRequest, workflow_),
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementListRequest, namespace__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::datamovement::DataMovementListResponse, uids_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::datamovement::DataMovementCreateRequest)},
  { 11, -1, -1, sizeof(::datamovement::DataMovementCreateResponse)},
  { 20, -1, -1, sizeof(::datamovement::DataMovementStatusRequest)},
  { 28, -1, -1, sizeof(::datamovement::DataMovementStatusResponse)},
  { 37, -1, -1, sizeof(::datamovement::DataMovementDeleteRequest)},
  { 44, -1, -1, sizeof(::datamovement::DataMovementDeleteResponse)},
  { 51, -1, -1, sizeof(::datamovement::DataMovementListRequest)},
  { 59, -1, -1, sizeof(::datamovement::DataMovementListResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementCreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementDeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::datamovement::_DataMovementListResponse_default_instance_),
};

const char descriptor_table_protodef_datamovement_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022datamovement.proto\022\014datamovement\"u\n\031Da"
  "taMovementCreateRequest\022\020\n\010workflow\030\003 \001("
  "\t\022\021\n\tnamespace\030\004 \001(\t\022\016\n\006source\030\005 \001(\t\022\023\n\013"
  "destination\030\006 \001(\t\022\016\n\006dryrun\030\007 \001(\010\"\236\001\n\032Da"
  "taMovementCreateResponse\022\013\n\003uid\030\001 \001(\t\022\?\n"
  "\006status\030\002 \001(\0162/.datamovement.DataMovemen"
  "tCreateResponse.Status\022\017\n\007message\030\003 \001(\t\""
  "!\n\006Status\022\013\n\007CREATED\020\000\022\n\n\006FAILED\020\001\"=\n\031Da"
  "taMovementStatusRequest\022\013\n\003uid\030\001 \001(\t\022\023\n\013"
  "maxWaitTime\030\002 \001(\003\"\323\002\n\032DataMovementStatus"
  "Response\022=\n\005state\030\001 \001(\0162..datamovement.D"
  "ataMovementStatusResponse.State\022\?\n\006statu"
  "s\030\002 \001(\0162/.datamovement.DataMovementStatu"
  "sResponse.Status\022\017\n\007message\030\003 \001(\t\"Q\n\005Sta"
  "te\022\013\n\007PENDING\020\000\022\014\n\010STARTING\020\001\022\013\n\007RUNNING"
  "\020\002\022\r\n\tCOMPLETED\020\003\022\021\n\rUNKNOWN_STATE\020\004\"Q\n\006"
  "Status\022\013\n\007INVALID\020\000\022\r\n\tNOT_FOUND\020\001\022\013\n\007SU"
  "CCESS\020\002\022\n\n\006FAILED\020\003\022\022\n\016UNKNOWN_STATUS\020\004\""
  "(\n\031DataMovementDeleteRequest\022\013\n\003uid\030\001 \001("
  "\t\"\251\001\n\032DataMovementDeleteResponse\022\?\n\006stat"
  "us\030\001 \001(\0162/.datamovement.DataMovementDele"
  "teResponse.Status\"J\n\006Status\022\013\n\007INVALID\020\000"
  "\022\r\n\tNOT_FOUND\020\001\022\013\n\007DELETED\020\002\022\n\n\006ACTIVE\020\003"
  "\022\013\n\007UNKNOWN\020\004\">\n\027DataMovementListRequest"
  "\022\020\n\010workflow\030\001 \001(\t\022\021\n\tnamespace\030\002 \001(\t\"(\n"
  "\030DataMovementListResponse\022\014\n\004uids\030\001 \003(\t2"
  "\201\003\n\tDataMover\022]\n\006Create\022\'.datamovement.D"
  "ataMovementCreateRequest\032(.datamovement."
  "DataMovementCreateResponse\"\000\022]\n\006Status\022\'"
  ".datamovement.DataMovementStatusRequest\032"
  "(.datamovement.DataMovementStatusRespons"
  "e\"\000\022]\n\006Delete\022\'.datamovement.DataMovemen"
  "tDeleteRequest\032(.datamovement.DataMoveme"
  "ntDeleteResponse\"\000\022W\n\004List\022%.datamovemen"
  "t.DataMovementListRequest\032&.datamovement"
  ".DataMovementListResponse\"\000BW\n\035com.hpe.c"
  "ray.nnf.datamovementB\021DataMovementProtoP"
  "\001Z!nnf.cray.hpe.com/datamovement/apib\006pr"
  "oto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_datamovement_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_datamovement_2eproto = {
  false, false, 1524, descriptor_table_protodef_datamovement_2eproto, "datamovement.proto", 
  &descriptor_table_datamovement_2eproto_once, nullptr, 0, 8,
  schemas, file_default_instances, TableStruct_datamovement_2eproto::offsets,
  file_level_metadata_datamovement_2eproto, file_level_enum_descriptors_datamovement_2eproto, file_level_service_descriptors_datamovement_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_datamovement_2eproto_getter() {
  return &descriptor_table_datamovement_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_datamovement_2eproto(&descriptor_table_datamovement_2eproto);
namespace datamovement {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataMovementCreateResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_datamovement_2eproto);
  return file_level_enum_descriptors_datamovement_2eproto[0];
}
bool DataMovementCreateResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DataMovementCreateResponse_Status DataMovementCreateResponse::CREATED;
constexpr DataMovementCreateResponse_Status DataMovementCreateResponse::FAILED;
constexpr DataMovementCreateResponse_Status DataMovementCreateResponse::Status_MIN;
constexpr DataMovementCreateResponse_Status DataMovementCreateResponse::Status_MAX;
constexpr int DataMovementCreateResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataMovementStatusResponse_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_datamovement_2eproto);
  return file_level_enum_descriptors_datamovement_2eproto[1];
}
bool DataMovementStatusResponse_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::PENDING;
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::STARTING;
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::RUNNING;
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::COMPLETED;
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::UNKNOWN_STATE;
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::State_MIN;
constexpr DataMovementStatusResponse_State DataMovementStatusResponse::State_MAX;
constexpr int DataMovementStatusResponse::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataMovementStatusResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_datamovement_2eproto);
  return file_level_enum_descriptors_datamovement_2eproto[2];
}
bool DataMovementStatusResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::INVALID;
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::NOT_FOUND;
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::SUCCESS;
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::FAILED;
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::UNKNOWN_STATUS;
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::Status_MIN;
constexpr DataMovementStatusResponse_Status DataMovementStatusResponse::Status_MAX;
constexpr int DataMovementStatusResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataMovementDeleteResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_datamovement_2eproto);
  return file_level_enum_descriptors_datamovement_2eproto[3];
}
bool DataMovementDeleteResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::INVALID;
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::NOT_FOUND;
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::DELETED;
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::ACTIVE;
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::UNKNOWN;
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::Status_MIN;
constexpr DataMovementDeleteResponse_Status DataMovementDeleteResponse::Status_MAX;
constexpr int DataMovementDeleteResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class DataMovementCreateRequest::_Internal {
 public:
};

DataMovementCreateRequest::DataMovementCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementCreateRequest)
}
DataMovementCreateRequest::DataMovementCreateRequest(const DataMovementCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  workflow_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    workflow_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_workflow().empty()) {
    workflow_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_workflow(), 
      GetArenaForAllocation());
  }
  namespace__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    namespace__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_namespace_().empty()) {
    namespace__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_namespace_(), 
      GetArenaForAllocation());
  }
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArenaForAllocation());
  }
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    destination_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_destination().empty()) {
    destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destination(), 
      GetArenaForAllocation());
  }
  dryrun_ = from.dryrun_;
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementCreateRequest)
}

inline void DataMovementCreateRequest::SharedCtor() {
workflow_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  workflow_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
namespace__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  namespace__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  destination_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dryrun_ = false;
}

DataMovementCreateRequest::~DataMovementCreateRequest() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementCreateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  workflow_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataMovementCreateRequest::ArenaDtor(void* object) {
  DataMovementCreateRequest* _this = reinterpret_cast< DataMovementCreateRequest* >(object);
  (void)_this;
}
void DataMovementCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementCreateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workflow_.ClearToEmpty();
  namespace__.ClearToEmpty();
  source_.ClearToEmpty();
  destination_.ClearToEmpty();
  dryrun_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string workflow = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_workflow();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementCreateRequest.workflow"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string namespace = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementCreateRequest.namespace"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string source = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementCreateRequest.source"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string destination = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_destination();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementCreateRequest.destination"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool dryrun = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          dryrun_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementCreateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementCreateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string workflow = 3;
  if (!this->_internal_workflow().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow().data(), static_cast<int>(this->_internal_workflow().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementCreateRequest.workflow");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_workflow(), target);
  }

  // string namespace = 4;
  if (!this->_internal_namespace_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementCreateRequest.namespace");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_namespace_(), target);
  }

  // string source = 5;
  if (!this->_internal_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementCreateRequest.source");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_source(), target);
  }

  // string destination = 6;
  if (!this->_internal_destination().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementCreateRequest.destination");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_destination(), target);
  }

  // bool dryrun = 7;
  if (this->_internal_dryrun() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_dryrun(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementCreateRequest)
  return target;
}

size_t DataMovementCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementCreateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string workflow = 3;
  if (!this->_internal_workflow().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow());
  }

  // string namespace = 4;
  if (!this->_internal_namespace_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_namespace_());
  }

  // string source = 5;
  if (!this->_internal_source().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string destination = 6;
  if (!this->_internal_destination().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  // bool dryrun = 7;
  if (this->_internal_dryrun() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementCreateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementCreateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementCreateRequest::GetClassData() const { return &_class_data_; }

void DataMovementCreateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementCreateRequest *>(to)->MergeFrom(
      static_cast<const DataMovementCreateRequest &>(from));
}


void DataMovementCreateRequest::MergeFrom(const DataMovementCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_workflow().empty()) {
    _internal_set_workflow(from._internal_workflow());
  }
  if (!from._internal_namespace_().empty()) {
    _internal_set_namespace_(from._internal_namespace_());
  }
  if (!from._internal_source().empty()) {
    _internal_set_source(from._internal_source());
  }
  if (!from._internal_destination().empty()) {
    _internal_set_destination(from._internal_destination());
  }
  if (from._internal_dryrun() != 0) {
    _internal_set_dryrun(from._internal_dryrun());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementCreateRequest::CopyFrom(const DataMovementCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementCreateRequest::IsInitialized() const {
  return true;
}

void DataMovementCreateRequest::InternalSwap(DataMovementCreateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &workflow_, lhs_arena,
      &other->workflow_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &namespace__, lhs_arena,
      &other->namespace__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &source_, lhs_arena,
      &other->source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &destination_, lhs_arena,
      &other->destination_, rhs_arena
  );
  swap(dryrun_, other->dryrun_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementCreateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[0]);
}

// ===================================================================

class DataMovementCreateResponse::_Internal {
 public:
};

DataMovementCreateResponse::DataMovementCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementCreateResponse)
}
DataMovementCreateResponse::DataMovementCreateResponse(const DataMovementCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid(), 
      GetArenaForAllocation());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementCreateResponse)
}

inline void DataMovementCreateResponse::SharedCtor() {
uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_ = 0;
}

DataMovementCreateResponse::~DataMovementCreateResponse() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementCreateResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataMovementCreateResponse::ArenaDtor(void* object) {
  DataMovementCreateResponse* _this = reinterpret_cast< DataMovementCreateResponse* >(object);
  (void)_this;
}
void DataMovementCreateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementCreateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementCreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementCreateResponse.uid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .datamovement.DataMovementCreateResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::datamovement::DataMovementCreateResponse_Status>(val));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementCreateResponse.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementCreateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementCreateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementCreateResponse.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // .datamovement.DataMovementCreateResponse.Status status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementCreateResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementCreateResponse)
  return target;
}

size_t DataMovementCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementCreateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .datamovement.DataMovementCreateResponse.Status status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementCreateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementCreateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementCreateResponse::GetClassData() const { return &_class_data_; }

void DataMovementCreateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementCreateResponse *>(to)->MergeFrom(
      static_cast<const DataMovementCreateResponse &>(from));
}


void DataMovementCreateResponse::MergeFrom(const DataMovementCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementCreateResponse::CopyFrom(const DataMovementCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementCreateResponse::IsInitialized() const {
  return true;
}

void DataMovementCreateResponse::InternalSwap(DataMovementCreateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementCreateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[1]);
}

// ===================================================================

class DataMovementStatusRequest::_Internal {
 public:
};

DataMovementStatusRequest::DataMovementStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementStatusRequest)
}
DataMovementStatusRequest::DataMovementStatusRequest(const DataMovementStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid(), 
      GetArenaForAllocation());
  }
  maxwaittime_ = from.maxwaittime_;
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementStatusRequest)
}

inline void DataMovementStatusRequest::SharedCtor() {
uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
maxwaittime_ = int64_t{0};
}

DataMovementStatusRequest::~DataMovementStatusRequest() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementStatusRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataMovementStatusRequest::ArenaDtor(void* object) {
  DataMovementStatusRequest* _this = reinterpret_cast< DataMovementStatusRequest* >(object);
  (void)_this;
}
void DataMovementStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  maxwaittime_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementStatusRequest.uid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 maxWaitTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          maxwaittime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementStatusRequest.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // int64 maxWaitTime = 2;
  if (this->_internal_maxwaittime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_maxwaittime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementStatusRequest)
  return target;
}

size_t DataMovementStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // int64 maxWaitTime = 2;
  if (this->_internal_maxwaittime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_maxwaittime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementStatusRequest::GetClassData() const { return &_class_data_; }

void DataMovementStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementStatusRequest *>(to)->MergeFrom(
      static_cast<const DataMovementStatusRequest &>(from));
}


void DataMovementStatusRequest::MergeFrom(const DataMovementStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_maxwaittime() != 0) {
    _internal_set_maxwaittime(from._internal_maxwaittime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementStatusRequest::CopyFrom(const DataMovementStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementStatusRequest::IsInitialized() const {
  return true;
}

void DataMovementStatusRequest::InternalSwap(DataMovementStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
  swap(maxwaittime_, other->maxwaittime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementStatusRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[2]);
}

// ===================================================================

class DataMovementStatusResponse::_Internal {
 public:
};

DataMovementStatusResponse::DataMovementStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementStatusResponse)
}
DataMovementStatusResponse::DataMovementStatusResponse(const DataMovementStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&state_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementStatusResponse)
}

inline void DataMovementStatusResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&state_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&state_)) + sizeof(status_));
}

DataMovementStatusResponse::~DataMovementStatusResponse() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementStatusResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataMovementStatusResponse::ArenaDtor(void* object) {
  DataMovementStatusResponse* _this = reinterpret_cast< DataMovementStatusResponse* >(object);
  (void)_this;
}
void DataMovementStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&state_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .datamovement.DataMovementStatusResponse.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::datamovement::DataMovementStatusResponse_State>(val));
        } else
          goto handle_unusual;
        continue;
      // .datamovement.DataMovementStatusResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::datamovement::DataMovementStatusResponse_Status>(val));
        } else
          goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementStatusResponse.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .datamovement.DataMovementStatusResponse.State state = 1;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_state(), target);
  }

  // .datamovement.DataMovementStatusResponse.Status status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementStatusResponse.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementStatusResponse)
  return target;
}

size_t DataMovementStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .datamovement.DataMovementStatusResponse.State state = 1;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  // .datamovement.DataMovementStatusResponse.Status status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementStatusResponse::GetClassData() const { return &_class_data_; }

void DataMovementStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementStatusResponse *>(to)->MergeFrom(
      static_cast<const DataMovementStatusResponse &>(from));
}


void DataMovementStatusResponse::MergeFrom(const DataMovementStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementStatusResponse::CopyFrom(const DataMovementStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementStatusResponse::IsInitialized() const {
  return true;
}

void DataMovementStatusResponse::InternalSwap(DataMovementStatusResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataMovementStatusResponse, status_)
      + sizeof(DataMovementStatusResponse::status_)
      - PROTOBUF_FIELD_OFFSET(DataMovementStatusResponse, state_)>(
          reinterpret_cast<char*>(&state_),
          reinterpret_cast<char*>(&other->state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementStatusResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[3]);
}

// ===================================================================

class DataMovementDeleteRequest::_Internal {
 public:
};

DataMovementDeleteRequest::DataMovementDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementDeleteRequest)
}
DataMovementDeleteRequest::DataMovementDeleteRequest(const DataMovementDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementDeleteRequest)
}

inline void DataMovementDeleteRequest::SharedCtor() {
uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DataMovementDeleteRequest::~DataMovementDeleteRequest() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementDeleteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataMovementDeleteRequest::ArenaDtor(void* object) {
  DataMovementDeleteRequest* _this = reinterpret_cast< DataMovementDeleteRequest* >(object);
  (void)_this;
}
void DataMovementDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementDeleteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementDeleteRequest.uid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementDeleteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementDeleteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementDeleteRequest.uid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementDeleteRequest)
  return target;
}

size_t DataMovementDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementDeleteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uid = 1;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementDeleteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementDeleteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementDeleteRequest::GetClassData() const { return &_class_data_; }

void DataMovementDeleteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementDeleteRequest *>(to)->MergeFrom(
      static_cast<const DataMovementDeleteRequest &>(from));
}


void DataMovementDeleteRequest::MergeFrom(const DataMovementDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementDeleteRequest::CopyFrom(const DataMovementDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementDeleteRequest::IsInitialized() const {
  return true;
}

void DataMovementDeleteRequest::InternalSwap(DataMovementDeleteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementDeleteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[4]);
}

// ===================================================================

class DataMovementDeleteResponse::_Internal {
 public:
};

DataMovementDeleteResponse::DataMovementDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementDeleteResponse)
}
DataMovementDeleteResponse::DataMovementDeleteResponse(const DataMovementDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementDeleteResponse)
}

inline void DataMovementDeleteResponse::SharedCtor() {
status_ = 0;
}

DataMovementDeleteResponse::~DataMovementDeleteResponse() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementDeleteResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementDeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DataMovementDeleteResponse::ArenaDtor(void* object) {
  DataMovementDeleteResponse* _this = reinterpret_cast< DataMovementDeleteResponse* >(object);
  (void)_this;
}
void DataMovementDeleteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementDeleteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .datamovement.DataMovementDeleteResponse.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::datamovement::DataMovementDeleteResponse_Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementDeleteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementDeleteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .datamovement.DataMovementDeleteResponse.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementDeleteResponse)
  return target;
}

size_t DataMovementDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementDeleteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .datamovement.DataMovementDeleteResponse.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementDeleteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementDeleteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementDeleteResponse::GetClassData() const { return &_class_data_; }

void DataMovementDeleteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementDeleteResponse *>(to)->MergeFrom(
      static_cast<const DataMovementDeleteResponse &>(from));
}


void DataMovementDeleteResponse::MergeFrom(const DataMovementDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementDeleteResponse::CopyFrom(const DataMovementDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementDeleteResponse::IsInitialized() const {
  return true;
}

void DataMovementDeleteResponse::InternalSwap(DataMovementDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementDeleteResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[5]);
}

// ===================================================================

class DataMovementListRequest::_Internal {
 public:
};

DataMovementListRequest::DataMovementListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementListRequest)
}
DataMovementListRequest::DataMovementListRequest(const DataMovementListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  workflow_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    workflow_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_workflow().empty()) {
    workflow_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_workflow(), 
      GetArenaForAllocation());
  }
  namespace__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    namespace__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_namespace_().empty()) {
    namespace__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_namespace_(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementListRequest)
}

inline void DataMovementListRequest::SharedCtor() {
workflow_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  workflow_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
namespace__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  namespace__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DataMovementListRequest::~DataMovementListRequest() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementListRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  workflow_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataMovementListRequest::ArenaDtor(void* object) {
  DataMovementListRequest* _this = reinterpret_cast< DataMovementListRequest* >(object);
  (void)_this;
}
void DataMovementListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementListRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workflow_.ClearToEmpty();
  namespace__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string workflow = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_workflow();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementListRequest.workflow"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string namespace = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_namespace_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementListRequest.namespace"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementListRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementListRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string workflow = 1;
  if (!this->_internal_workflow().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workflow().data(), static_cast<int>(this->_internal_workflow().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementListRequest.workflow");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_workflow(), target);
  }

  // string namespace = 2;
  if (!this->_internal_namespace_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespace_().data(), static_cast<int>(this->_internal_namespace_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementListRequest.namespace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_namespace_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementListRequest)
  return target;
}

size_t DataMovementListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementListRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string workflow = 1;
  if (!this->_internal_workflow().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workflow());
  }

  // string namespace = 2;
  if (!this->_internal_namespace_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_namespace_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementListRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementListRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementListRequest::GetClassData() const { return &_class_data_; }

void DataMovementListRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementListRequest *>(to)->MergeFrom(
      static_cast<const DataMovementListRequest &>(from));
}


void DataMovementListRequest::MergeFrom(const DataMovementListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_workflow().empty()) {
    _internal_set_workflow(from._internal_workflow());
  }
  if (!from._internal_namespace_().empty()) {
    _internal_set_namespace_(from._internal_namespace_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementListRequest::CopyFrom(const DataMovementListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementListRequest::IsInitialized() const {
  return true;
}

void DataMovementListRequest::InternalSwap(DataMovementListRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &workflow_, lhs_arena,
      &other->workflow_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &namespace__, lhs_arena,
      &other->namespace__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementListRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[6]);
}

// ===================================================================

class DataMovementListResponse::_Internal {
 public:
};

DataMovementListResponse::DataMovementListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  uids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:datamovement.DataMovementListResponse)
}
DataMovementListResponse::DataMovementListResponse(const DataMovementListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      uids_(from.uids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:datamovement.DataMovementListResponse)
}

inline void DataMovementListResponse::SharedCtor() {
}

DataMovementListResponse::~DataMovementListResponse() {
  // @@protoc_insertion_point(destructor:datamovement.DataMovementListResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DataMovementListResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DataMovementListResponse::ArenaDtor(void* object) {
  DataMovementListResponse* _this = reinterpret_cast< DataMovementListResponse* >(object);
  (void)_this;
}
void DataMovementListResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMovementListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DataMovementListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:datamovement.DataMovementListResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMovementListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string uids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "datamovement.DataMovementListResponse.uids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DataMovementListResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:datamovement.DataMovementListResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uids = 1;
  for (int i = 0, n = this->_internal_uids_size(); i < n; i++) {
    const auto& s = this->_internal_uids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "datamovement.DataMovementListResponse.uids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:datamovement.DataMovementListResponse)
  return target;
}

size_t DataMovementListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:datamovement.DataMovementListResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uids_.size());
  for (int i = 0, n = uids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DataMovementListResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DataMovementListResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DataMovementListResponse::GetClassData() const { return &_class_data_; }

void DataMovementListResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DataMovementListResponse *>(to)->MergeFrom(
      static_cast<const DataMovementListResponse &>(from));
}


void DataMovementListResponse::MergeFrom(const DataMovementListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:datamovement.DataMovementListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  uids_.MergeFrom(from.uids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DataMovementListResponse::CopyFrom(const DataMovementListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:datamovement.DataMovementListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMovementListResponse::IsInitialized() const {
  return true;
}

void DataMovementListResponse::InternalSwap(DataMovementListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  uids_.InternalSwap(&other->uids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMovementListResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_datamovement_2eproto_getter, &descriptor_table_datamovement_2eproto_once,
      file_level_metadata_datamovement_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace datamovement
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementCreateRequest* Arena::CreateMaybeMessage< ::datamovement::DataMovementCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementCreateResponse* Arena::CreateMaybeMessage< ::datamovement::DataMovementCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementStatusRequest* Arena::CreateMaybeMessage< ::datamovement::DataMovementStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementStatusResponse* Arena::CreateMaybeMessage< ::datamovement::DataMovementStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementDeleteRequest* Arena::CreateMaybeMessage< ::datamovement::DataMovementDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementDeleteResponse* Arena::CreateMaybeMessage< ::datamovement::DataMovementDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementDeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementListRequest* Arena::CreateMaybeMessage< ::datamovement::DataMovementListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::datamovement::DataMovementListResponse* Arena::CreateMaybeMessage< ::datamovement::DataMovementListResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::datamovement::DataMovementListResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
