// Copyright 2022 Hewlett Packard Enterprise Development LP
// Other additional copyright holders may be indicated within.
//
// The entirety of this work is licensed under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
//
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: api/datamovement.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataMovementCreateResponse_Status int32

const (
	DataMovementCreateResponse_SUCCESS DataMovementCreateResponse_Status = 0
	DataMovementCreateResponse_FAILED  DataMovementCreateResponse_Status = 1
	DataMovementCreateResponse_INVALID DataMovementCreateResponse_Status = 2
)

// Enum value maps for DataMovementCreateResponse_Status.
var (
	DataMovementCreateResponse_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "INVALID",
	}
	DataMovementCreateResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"FAILED":  1,
		"INVALID": 2,
	}
)

func (x DataMovementCreateResponse_Status) Enum() *DataMovementCreateResponse_Status {
	p := new(DataMovementCreateResponse_Status)
	*p = x
	return p
}

func (x DataMovementCreateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMovementCreateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_datamovement_proto_enumTypes[0].Descriptor()
}

func (DataMovementCreateResponse_Status) Type() protoreflect.EnumType {
	return &file_api_datamovement_proto_enumTypes[0]
}

func (x DataMovementCreateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMovementCreateResponse_Status.Descriptor instead.
func (DataMovementCreateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{4, 0}
}

type DataMovementStatusResponse_State int32

const (
	DataMovementStatusResponse_PENDING       DataMovementStatusResponse_State = 0
	DataMovementStatusResponse_STARTING      DataMovementStatusResponse_State = 1
	DataMovementStatusResponse_RUNNING       DataMovementStatusResponse_State = 2
	DataMovementStatusResponse_COMPLETED     DataMovementStatusResponse_State = 3
	DataMovementStatusResponse_CANCELLING    DataMovementStatusResponse_State = 4
	DataMovementStatusResponse_UNKNOWN_STATE DataMovementStatusResponse_State = 5
)

// Enum value maps for DataMovementStatusResponse_State.
var (
	DataMovementStatusResponse_State_name = map[int32]string{
		0: "PENDING",
		1: "STARTING",
		2: "RUNNING",
		3: "COMPLETED",
		4: "CANCELLING",
		5: "UNKNOWN_STATE",
	}
	DataMovementStatusResponse_State_value = map[string]int32{
		"PENDING":       0,
		"STARTING":      1,
		"RUNNING":       2,
		"COMPLETED":     3,
		"CANCELLING":    4,
		"UNKNOWN_STATE": 5,
	}
)

func (x DataMovementStatusResponse_State) Enum() *DataMovementStatusResponse_State {
	p := new(DataMovementStatusResponse_State)
	*p = x
	return p
}

func (x DataMovementStatusResponse_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMovementStatusResponse_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_datamovement_proto_enumTypes[1].Descriptor()
}

func (DataMovementStatusResponse_State) Type() protoreflect.EnumType {
	return &file_api_datamovement_proto_enumTypes[1]
}

func (x DataMovementStatusResponse_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMovementStatusResponse_State.Descriptor instead.
func (DataMovementStatusResponse_State) EnumDescriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{6, 0}
}

type DataMovementStatusResponse_Status int32

const (
	DataMovementStatusResponse_INVALID        DataMovementStatusResponse_Status = 0
	DataMovementStatusResponse_NOT_FOUND      DataMovementStatusResponse_Status = 1
	DataMovementStatusResponse_SUCCESS        DataMovementStatusResponse_Status = 2
	DataMovementStatusResponse_FAILED         DataMovementStatusResponse_Status = 3
	DataMovementStatusResponse_CANCELLED      DataMovementStatusResponse_Status = 4
	DataMovementStatusResponse_UNKNOWN_STATUS DataMovementStatusResponse_Status = 5
)

// Enum value maps for DataMovementStatusResponse_Status.
var (
	DataMovementStatusResponse_Status_name = map[int32]string{
		0: "INVALID",
		1: "NOT_FOUND",
		2: "SUCCESS",
		3: "FAILED",
		4: "CANCELLED",
		5: "UNKNOWN_STATUS",
	}
	DataMovementStatusResponse_Status_value = map[string]int32{
		"INVALID":        0,
		"NOT_FOUND":      1,
		"SUCCESS":        2,
		"FAILED":         3,
		"CANCELLED":      4,
		"UNKNOWN_STATUS": 5,
	}
)

func (x DataMovementStatusResponse_Status) Enum() *DataMovementStatusResponse_Status {
	p := new(DataMovementStatusResponse_Status)
	*p = x
	return p
}

func (x DataMovementStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMovementStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_datamovement_proto_enumTypes[2].Descriptor()
}

func (DataMovementStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_api_datamovement_proto_enumTypes[2]
}

func (x DataMovementStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMovementStatusResponse_Status.Descriptor instead.
func (DataMovementStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{6, 1}
}

type DataMovementDeleteResponse_Status int32

const (
	DataMovementDeleteResponse_INVALID   DataMovementDeleteResponse_Status = 0
	DataMovementDeleteResponse_NOT_FOUND DataMovementDeleteResponse_Status = 1
	DataMovementDeleteResponse_SUCCESS   DataMovementDeleteResponse_Status = 2
	DataMovementDeleteResponse_ACTIVE    DataMovementDeleteResponse_Status = 3
	DataMovementDeleteResponse_UNKNOWN   DataMovementDeleteResponse_Status = 4
)

// Enum value maps for DataMovementDeleteResponse_Status.
var (
	DataMovementDeleteResponse_Status_name = map[int32]string{
		0: "INVALID",
		1: "NOT_FOUND",
		2: "SUCCESS",
		3: "ACTIVE",
		4: "UNKNOWN",
	}
	DataMovementDeleteResponse_Status_value = map[string]int32{
		"INVALID":   0,
		"NOT_FOUND": 1,
		"SUCCESS":   2,
		"ACTIVE":    3,
		"UNKNOWN":   4,
	}
)

func (x DataMovementDeleteResponse_Status) Enum() *DataMovementDeleteResponse_Status {
	p := new(DataMovementDeleteResponse_Status)
	*p = x
	return p
}

func (x DataMovementDeleteResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMovementDeleteResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_datamovement_proto_enumTypes[3].Descriptor()
}

func (DataMovementDeleteResponse_Status) Type() protoreflect.EnumType {
	return &file_api_datamovement_proto_enumTypes[3]
}

func (x DataMovementDeleteResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMovementDeleteResponse_Status.Descriptor instead.
func (DataMovementDeleteResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{8, 0}
}

type DataMovementCancelResponse_Status int32

const (
	DataMovementCancelResponse_INVALID   DataMovementCancelResponse_Status = 0
	DataMovementCancelResponse_NOT_FOUND DataMovementCancelResponse_Status = 1
	DataMovementCancelResponse_SUCCESS   DataMovementCancelResponse_Status = 2
	DataMovementCancelResponse_FAILED    DataMovementCancelResponse_Status = 3
)

// Enum value maps for DataMovementCancelResponse_Status.
var (
	DataMovementCancelResponse_Status_name = map[int32]string{
		0: "INVALID",
		1: "NOT_FOUND",
		2: "SUCCESS",
		3: "FAILED",
	}
	DataMovementCancelResponse_Status_value = map[string]int32{
		"INVALID":   0,
		"NOT_FOUND": 1,
		"SUCCESS":   2,
		"FAILED":    3,
	}
)

func (x DataMovementCancelResponse_Status) Enum() *DataMovementCancelResponse_Status {
	p := new(DataMovementCancelResponse_Status)
	*p = x
	return p
}

func (x DataMovementCancelResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMovementCancelResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_datamovement_proto_enumTypes[4].Descriptor()
}

func (DataMovementCancelResponse_Status) Type() protoreflect.EnumType {
	return &file_api_datamovement_proto_enumTypes[4]
}

func (x DataMovementCancelResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMovementCancelResponse_Status.Descriptor instead.
func (DataMovementCancelResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{12, 0}
}

// The data movement version response returns information on the running data movement daemon. This includes
// the build version and a list of supported API versions.
type DataMovementVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ApiVersions []string `protobuf:"bytes,2,rep,name=apiVersions,proto3" json:"apiVersions,omitempty"`
}

func (x *DataMovementVersionResponse) Reset() {
	*x = DataMovementVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementVersionResponse) ProtoMessage() {}

func (x *DataMovementVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementVersionResponse.ProtoReflect.Descriptor instead.
func (*DataMovementVersionResponse) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{0}
}

func (x *DataMovementVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DataMovementVersionResponse) GetApiVersions() []string {
	if x != nil {
		return x.ApiVersions
	}
	return nil
}

// Data Movement workflow message contains identifying information for the workflow initiating the data movement
// operation. This message must be nested in all Request messages.
type DataMovementWorkflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DataMovementWorkflow) Reset() {
	*x = DataMovementWorkflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementWorkflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementWorkflow) ProtoMessage() {}

func (x *DataMovementWorkflow) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementWorkflow.ProtoReflect.Descriptor instead.
func (*DataMovementWorkflow) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{1}
}

func (x *DataMovementWorkflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataMovementWorkflow) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// Data Movement workflows contain a CommandStatus object in the Status object. This information
// relays the current state of the data movement progress. It includes the command, the progress
// percentage (e.g. 0-100%), elapsed time of the data movement (duration string, e.g. 5s), the last
// received message from the data movment command, and the time of that last message.
type DataMovementCommandStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command         string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Progress        int32  `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	ElapsedTime     string `protobuf:"bytes,3,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"`
	LastMessage     string `protobuf:"bytes,4,opt,name=lastMessage,proto3" json:"lastMessage,omitempty"`
	LastMessageTime string `protobuf:"bytes,5,opt,name=lastMessageTime,proto3" json:"lastMessageTime,omitempty"`
}

func (x *DataMovementCommandStatus) Reset() {
	*x = DataMovementCommandStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementCommandStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementCommandStatus) ProtoMessage() {}

func (x *DataMovementCommandStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementCommandStatus.ProtoReflect.Descriptor instead.
func (*DataMovementCommandStatus) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{2}
}

func (x *DataMovementCommandStatus) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *DataMovementCommandStatus) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *DataMovementCommandStatus) GetElapsedTime() string {
	if x != nil {
		return x.ElapsedTime
	}
	return ""
}

func (x *DataMovementCommandStatus) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *DataMovementCommandStatus) GetLastMessageTime() string {
	if x != nil {
		return x.LastMessageTime
	}
	return ""
}

// The data movement create request message containing the source and destination files or directories. The
// NNF Data Mover will perform a copy from source to the destination. Specify dryrun to instantiate
// a new data movement request where the copy is simulated and not executed. dcpOptions allows for
// adding additional options to the dcp command that performs data movement.
type DataMovementCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow    *DataMovementWorkflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Source      string                `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination string                `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Dryrun      bool                  `protobuf:"varint,4,opt,name=dryrun,proto3" json:"dryrun,omitempty"`
	DcpOptions  string                `protobuf:"bytes,5,opt,name=dcpOptions,proto3" json:"dcpOptions,omitempty"`
}

func (x *DataMovementCreateRequest) Reset() {
	*x = DataMovementCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementCreateRequest) ProtoMessage() {}

func (x *DataMovementCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementCreateRequest.ProtoReflect.Descriptor instead.
func (*DataMovementCreateRequest) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{3}
}

func (x *DataMovementCreateRequest) GetWorkflow() *DataMovementWorkflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *DataMovementCreateRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DataMovementCreateRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *DataMovementCreateRequest) GetDryrun() bool {
	if x != nil {
		return x.Dryrun
	}
	return false
}

func (x *DataMovementCreateRequest) GetDcpOptions() string {
	if x != nil {
		return x.DcpOptions
	}
	return ""
}

// The data movement create response message contains a unique identifier amont all data movement requests for
// the lifetime of the active job. The UID can be used to query for status of the request using the
// data movement status request message.
type DataMovementCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string                            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Status  DataMovementCreateResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=datamovement.DataMovementCreateResponse_Status" json:"status,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DataMovementCreateResponse) Reset() {
	*x = DataMovementCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementCreateResponse) ProtoMessage() {}

func (x *DataMovementCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementCreateResponse.ProtoReflect.Descriptor instead.
func (*DataMovementCreateResponse) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{4}
}

func (x *DataMovementCreateResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DataMovementCreateResponse) GetStatus() DataMovementCreateResponse_Status {
	if x != nil {
		return x.Status
	}
	return DataMovementCreateResponse_SUCCESS
}

func (x *DataMovementCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The data movement status request message permits users to query the status of a previously issued
// data movement request by specifying the request's unique identifier.
type DataMovementStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow    *DataMovementWorkflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Uid         string                `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	MaxWaitTime int64                 `protobuf:"varint,3,opt,name=maxWaitTime,proto3" json:"maxWaitTime,omitempty"`
}

func (x *DataMovementStatusRequest) Reset() {
	*x = DataMovementStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementStatusRequest) ProtoMessage() {}

func (x *DataMovementStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementStatusRequest.ProtoReflect.Descriptor instead.
func (*DataMovementStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{5}
}

func (x *DataMovementStatusRequest) GetWorkflow() *DataMovementWorkflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *DataMovementStatusRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DataMovementStatusRequest) GetMaxWaitTime() int64 {
	if x != nil {
		return x.MaxWaitTime
	}
	return 0
}

// The data movement status response message defines the current status of a data movement request. The
// state field describes the current state of the request. The message field contains ancillary information
// describing the data movement request.
type DataMovementStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         DataMovementStatusResponse_State  `protobuf:"varint,1,opt,name=state,proto3,enum=datamovement.DataMovementStatusResponse_State" json:"state,omitempty"`
	Status        DataMovementStatusResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=datamovement.DataMovementStatusResponse_Status" json:"status,omitempty"`
	Message       string                            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CommandStatus *DataMovementCommandStatus        `protobuf:"bytes,4,opt,name=commandStatus,proto3" json:"commandStatus,omitempty"`
	StartTime     string                            `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                            `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *DataMovementStatusResponse) Reset() {
	*x = DataMovementStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementStatusResponse) ProtoMessage() {}

func (x *DataMovementStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementStatusResponse.ProtoReflect.Descriptor instead.
func (*DataMovementStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{6}
}

func (x *DataMovementStatusResponse) GetState() DataMovementStatusResponse_State {
	if x != nil {
		return x.State
	}
	return DataMovementStatusResponse_PENDING
}

func (x *DataMovementStatusResponse) GetStatus() DataMovementStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return DataMovementStatusResponse_INVALID
}

func (x *DataMovementStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DataMovementStatusResponse) GetCommandStatus() *DataMovementCommandStatus {
	if x != nil {
		return x.CommandStatus
	}
	return nil
}

func (x *DataMovementStatusResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DataMovementStatusResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

// The data movement delete request permits users to delete a completed data movement request (any request with a
// status of COMPLETED) by specifying the request's unique identifier.
type DataMovementDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *DataMovementWorkflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Uid      string                `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DataMovementDeleteRequest) Reset() {
	*x = DataMovementDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementDeleteRequest) ProtoMessage() {}

func (x *DataMovementDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementDeleteRequest.ProtoReflect.Descriptor instead.
func (*DataMovementDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{7}
}

func (x *DataMovementDeleteRequest) GetWorkflow() *DataMovementWorkflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *DataMovementDeleteRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// The data movement delete response returns the status of the delete operation.
type DataMovementDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  DataMovementDeleteResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=datamovement.DataMovementDeleteResponse_Status" json:"status,omitempty"`
	Message string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DataMovementDeleteResponse) Reset() {
	*x = DataMovementDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementDeleteResponse) ProtoMessage() {}

func (x *DataMovementDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementDeleteResponse.ProtoReflect.Descriptor instead.
func (*DataMovementDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{8}
}

func (x *DataMovementDeleteResponse) GetStatus() DataMovementDeleteResponse_Status {
	if x != nil {
		return x.Status
	}
	return DataMovementDeleteResponse_INVALID
}

func (x *DataMovementDeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// The data movement list request allows a user to get a list of the current
// data movement requests. The user must supply the workflow and namespace
// which will be used to filter the data movement requests for retrieval.
type DataMovementListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *DataMovementWorkflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *DataMovementListRequest) Reset() {
	*x = DataMovementListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementListRequest) ProtoMessage() {}

func (x *DataMovementListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementListRequest.ProtoReflect.Descriptor instead.
func (*DataMovementListRequest) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{9}
}

func (x *DataMovementListRequest) GetWorkflow() *DataMovementWorkflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

// The data movement list response returns a list of the matching data movement
// requests' uids
type DataMovementListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids []string `protobuf:"bytes,1,rep,name=uids,proto3" json:"uids,omitempty"`
}

func (x *DataMovementListResponse) Reset() {
	*x = DataMovementListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementListResponse) ProtoMessage() {}

func (x *DataMovementListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementListResponse.ProtoReflect.Descriptor instead.
func (*DataMovementListResponse) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{10}
}

func (x *DataMovementListResponse) GetUids() []string {
	if x != nil {
		return x.Uids
	}
	return nil
}

// The data movement cancel request permits users to iniatiate a cancellation of
// a data movement request that is in progress.
type DataMovementCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *DataMovementWorkflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Uid      string                `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DataMovementCancelRequest) Reset() {
	*x = DataMovementCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementCancelRequest) ProtoMessage() {}

func (x *DataMovementCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementCancelRequest.ProtoReflect.Descriptor instead.
func (*DataMovementCancelRequest) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{11}
}

func (x *DataMovementCancelRequest) GetWorkflow() *DataMovementWorkflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *DataMovementCancelRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// The data movement cancel response returns the status of the cancel request.
// The cancel process will begin upon success. This response does not indicate
// that that cancel process has completed, but rather that it has been
// initiated.
type DataMovementCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  DataMovementCancelResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=datamovement.DataMovementCancelResponse_Status" json:"status,omitempty"`
	Message string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DataMovementCancelResponse) Reset() {
	*x = DataMovementCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_datamovement_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMovementCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMovementCancelResponse) ProtoMessage() {}

func (x *DataMovementCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_datamovement_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMovementCancelResponse.ProtoReflect.Descriptor instead.
func (*DataMovementCancelResponse) Descriptor() ([]byte, []int) {
	return file_api_datamovement_proto_rawDescGZIP(), []int{12}
}

func (x *DataMovementCancelResponse) GetStatus() DataMovementCancelResponse_Status {
	if x != nil {
		return x.Status
	}
	return DataMovementCancelResponse_INVALID
}

func (x *DataMovementCancelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_datamovement_proto protoreflect.FileDescriptor

var file_api_datamovement_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x1b, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48,
	0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x19, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x79, 0x72, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x72, 0x75, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x63,
	0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x63, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x1a, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x22, 0x8f,
	0x01, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x91, 0x04, 0x0a, 0x1a, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x61, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x10, 0x05, 0x22, 0x60, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x10, 0x05, 0x22, 0x6d, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x1a, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x04, 0x22, 0x59, 0x0a, 0x17, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x2e, 0x0a, 0x18,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x19,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x1a,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x32, 0xb0, 0x04, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x27, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x57, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x70, 0x65, 0x2e, 0x63, 0x72, 0x61, 0x79, 0x2e,
	0x6e, 0x6e, 0x66, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x11, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x6e, 0x6e, 0x66, 0x2e, 0x63, 0x72, 0x61, 0x79, 0x2e,
	0x68, 0x70, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_datamovement_proto_rawDescOnce sync.Once
	file_api_datamovement_proto_rawDescData = file_api_datamovement_proto_rawDesc
)

func file_api_datamovement_proto_rawDescGZIP() []byte {
	file_api_datamovement_proto_rawDescOnce.Do(func() {
		file_api_datamovement_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_datamovement_proto_rawDescData)
	})
	return file_api_datamovement_proto_rawDescData
}

var file_api_datamovement_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_datamovement_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_datamovement_proto_goTypes = []interface{}{
	(DataMovementCreateResponse_Status)(0), // 0: datamovement.DataMovementCreateResponse.Status
	(DataMovementStatusResponse_State)(0),  // 1: datamovement.DataMovementStatusResponse.State
	(DataMovementStatusResponse_Status)(0), // 2: datamovement.DataMovementStatusResponse.Status
	(DataMovementDeleteResponse_Status)(0), // 3: datamovement.DataMovementDeleteResponse.Status
	(DataMovementCancelResponse_Status)(0), // 4: datamovement.DataMovementCancelResponse.Status
	(*DataMovementVersionResponse)(nil),    // 5: datamovement.DataMovementVersionResponse
	(*DataMovementWorkflow)(nil),           // 6: datamovement.DataMovementWorkflow
	(*DataMovementCommandStatus)(nil),      // 7: datamovement.DataMovementCommandStatus
	(*DataMovementCreateRequest)(nil),      // 8: datamovement.DataMovementCreateRequest
	(*DataMovementCreateResponse)(nil),     // 9: datamovement.DataMovementCreateResponse
	(*DataMovementStatusRequest)(nil),      // 10: datamovement.DataMovementStatusRequest
	(*DataMovementStatusResponse)(nil),     // 11: datamovement.DataMovementStatusResponse
	(*DataMovementDeleteRequest)(nil),      // 12: datamovement.DataMovementDeleteRequest
	(*DataMovementDeleteResponse)(nil),     // 13: datamovement.DataMovementDeleteResponse
	(*DataMovementListRequest)(nil),        // 14: datamovement.DataMovementListRequest
	(*DataMovementListResponse)(nil),       // 15: datamovement.DataMovementListResponse
	(*DataMovementCancelRequest)(nil),      // 16: datamovement.DataMovementCancelRequest
	(*DataMovementCancelResponse)(nil),     // 17: datamovement.DataMovementCancelResponse
	(*emptypb.Empty)(nil),                  // 18: google.protobuf.Empty
}
var file_api_datamovement_proto_depIdxs = []int32{
	6,  // 0: datamovement.DataMovementCreateRequest.workflow:type_name -> datamovement.DataMovementWorkflow
	0,  // 1: datamovement.DataMovementCreateResponse.status:type_name -> datamovement.DataMovementCreateResponse.Status
	6,  // 2: datamovement.DataMovementStatusRequest.workflow:type_name -> datamovement.DataMovementWorkflow
	1,  // 3: datamovement.DataMovementStatusResponse.state:type_name -> datamovement.DataMovementStatusResponse.State
	2,  // 4: datamovement.DataMovementStatusResponse.status:type_name -> datamovement.DataMovementStatusResponse.Status
	7,  // 5: datamovement.DataMovementStatusResponse.commandStatus:type_name -> datamovement.DataMovementCommandStatus
	6,  // 6: datamovement.DataMovementDeleteRequest.workflow:type_name -> datamovement.DataMovementWorkflow
	3,  // 7: datamovement.DataMovementDeleteResponse.status:type_name -> datamovement.DataMovementDeleteResponse.Status
	6,  // 8: datamovement.DataMovementListRequest.workflow:type_name -> datamovement.DataMovementWorkflow
	6,  // 9: datamovement.DataMovementCancelRequest.workflow:type_name -> datamovement.DataMovementWorkflow
	4,  // 10: datamovement.DataMovementCancelResponse.status:type_name -> datamovement.DataMovementCancelResponse.Status
	18, // 11: datamovement.DataMover.Version:input_type -> google.protobuf.Empty
	8,  // 12: datamovement.DataMover.Create:input_type -> datamovement.DataMovementCreateRequest
	10, // 13: datamovement.DataMover.Status:input_type -> datamovement.DataMovementStatusRequest
	12, // 14: datamovement.DataMover.Delete:input_type -> datamovement.DataMovementDeleteRequest
	14, // 15: datamovement.DataMover.List:input_type -> datamovement.DataMovementListRequest
	16, // 16: datamovement.DataMover.Cancel:input_type -> datamovement.DataMovementCancelRequest
	5,  // 17: datamovement.DataMover.Version:output_type -> datamovement.DataMovementVersionResponse
	9,  // 18: datamovement.DataMover.Create:output_type -> datamovement.DataMovementCreateResponse
	11, // 19: datamovement.DataMover.Status:output_type -> datamovement.DataMovementStatusResponse
	13, // 20: datamovement.DataMover.Delete:output_type -> datamovement.DataMovementDeleteResponse
	15, // 21: datamovement.DataMover.List:output_type -> datamovement.DataMovementListResponse
	17, // 22: datamovement.DataMover.Cancel:output_type -> datamovement.DataMovementCancelResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_datamovement_proto_init() }
func file_api_datamovement_proto_init() {
	if File_api_datamovement_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_datamovement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementWorkflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementCommandStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_datamovement_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMovementCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_datamovement_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_datamovement_proto_goTypes,
		DependencyIndexes: file_api_datamovement_proto_depIdxs,
		EnumInfos:         file_api_datamovement_proto_enumTypes,
		MessageInfos:      file_api_datamovement_proto_msgTypes,
	}.Build()
	File_api_datamovement_proto = out.File
	file_api_datamovement_proto_rawDesc = nil
	file_api_datamovement_proto_goTypes = nil
	file_api_datamovement_proto_depIdxs = nil
}
